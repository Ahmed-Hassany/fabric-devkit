version: '2'

services:

  orderer.fabric.network:
    container_name: orderer.fabric.network
    image: hyperledger/fabric-orderer
    tty: true
    environment:
      - CONFIGTX_ORDERER_ORDERERTYPE=solo
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_QUEUESIZE=1000
      - ORDERER_GENERAL_MAXWINDOWSIZE=1000
      - ORDERER_RAMLEDGER_HISTORY_SIZE=100
      - ORDERER_GENERAL_BATCHSIZE=10
      - ORDERER_GENERAL_BATCHTIMEOUT=10s
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/fabric/crypto-config/channel-artefacts/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/fabric/crypto-config/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/fabric/crypto-config/tls/server.crt
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/fabric/crypto-config/tls/server.key
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/fabric/crypto-config/tls/ca.crt, /var/hyperledger/fabric/crypto-config/peerOrganizations/org1.fabric.network/tls/ca.crt, /var/hyperledger/fabric/crypto-config/peerOrganizations/org2.fabric.network/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
      - ./assets/channel-artefacts/:/var/hyperledger/fabric/crypto-config/channel-artefacts/
      - ./assets/crypto-config/ordererOrganizations/fabric.network/orderers/orderer.fabric.network/:/var/hyperledger/fabric/crypto-config/
      - ./assets/crypto-config/peerOrganizations/org1.fabric.network/peers/peer0.org1.fabric.network/tls/ca.crt:/var/hyperledger/fabric/crypto-config/peerOrganizations/org1.fabric.network/tls/ca.crt
      - ./assets/crypto-config/peerOrganizations/org2.fabric.network/peers/peer0.org2.fabric.network/tls/ca.crt:/var/hyperledger/fabric/crypto-config/peerOrganizations/org2.fabric.network/tls/ca.crt
    ports:
      - 7050:7050

#Org1
  ca.org1.fabric.network:
    container_name: ca.org1.fabric.network
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.org1.fabric.network
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server/crypto-config/ca/ca.org1.fabric.network-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server/crypto-config/ca/secret.key
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server/crypto-config/ca/ca.org1.fabric.network-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server/crypto-config/ca/secret.key
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - ./assets/crypto-config/peerOrganizations/org1.fabric.network/ca/:/etc/hyperledger/fabric-ca-server/crypto-config/ca/
    ports:
      - 7054:7054

  peer0.db.org1.fabric.network:
    container_name: peer0.db.org1.fabric.network
    image: hyperledger/fabric-couchdb
    ports:
      - 5984:5984

  peer0.org1.fabric.network:
    container_name: peer0.org1.fabric.network
    image: hyperledger/fabric-peer
    tty: true
    environment:
      - CORE_PEER_ID=peer0.org1.fabric.network
      - CORE_PEER_ADDRESS=peer0.org1.fabric.network:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/crypto-config/msp
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/crypto-config/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/crypto-config/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/crypto-config/tls/ca.crt
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.fabric.network:7051
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      # This disables mutual auth for gossip
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_LOGGING_LEVEL=debug
      - CORE_NEXT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=twoorgs_default
      - GOPATH=/opt/gopath
      # World state
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=peer0.db.org1.fabric.network:5984
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start 
             /bin/bash
    volumes:
      - /var/run/:/host/var/run/
      - ./assets/crypto-config/peerOrganizations/org1.fabric.network/peers/peer0.org1.fabric.network/:/etc/hyperledger/fabric/crypto-config/
    ports:
      - 7051:7051
      - 7053:7053
    depends_on: 
      - orderer.fabric.network
      - peer0.db.org1.fabric.network

  cli.peer0.org1.fabric.network:
      container_name: cli.peer0.org1.fabric.network
      image: hyperledger/fabric-tools
      tty: true
      environment:
        - GOPATH=/opt/gopath
        - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
        - CORE_LOGGING_LEVEL=debug
        - CORE_PEER_ID=peer0.org1.fabric.network
        - CORE_PEER_ADDRESS=peer0.org1.fabric.network:7051
        - CORE_PEER_LOCALMSPID=Org1MSP
        - CORE_PEER_TLS_ENABLED=true
        - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/crypto-config/tls/server.crt
        - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/crypto-config/tls/server.key
        - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/crypto-config/tls/ca.crt
        - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/crypto-config/users/Admin@org1.fabric.network/msp
        - ORDERER_CA=/etc/hyperledger/fabric/crypto-config/orderer/msp/tlscacerts/tlsca.fabric.network-cert.pem
      working_dir: /opt/gopath/src/github.com/hyperledger/fabric
      command: /bin/bash
      volumes:
        - /var/run/:/host/var/run/
        - ./assets/crypto-config/peerOrganizations/org1.fabric.network/peers/peer0.org1.fabric.network/:/etc/hyperledger/fabric/crypto-config/
        - ./assets/crypto-config/peerOrganizations/org1.fabric.network/users/:/etc/hyperledger/fabric/crypto-config/users/
        - ./assets/crypto-config/ordererOrganizations/fabric.network/orderers/orderer.fabric.network/:/etc/hyperledger/fabric/crypto-config/orderer/
        - ./assets/channel-artefacts/:/opt/gopath/src/github.com/hyperledger/fabric/channel-artefacts/        
        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/scripts
        - ../../chaincodes/:/opt/gopath/src/github.com/hyperledger/fabric/chaincodes/
      depends_on:
        - peer0.org1.fabric.network

#org2
  ca.org2.fabric.network:
    container_name: ca.org2.fabric.network
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.org2.fabric.network
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server/crypto-config/ca/ca.org2.fabric.network-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server/crypto-config/ca/secret.key
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server/crypto-config/ca/ca.org2.fabric.network-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server/crypto-config/ca/secret.key
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - ./assets/crypto-config/peerOrganizations/org2.fabric.network/ca/:/etc/hyperledger/fabric-ca-server/crypto-config/ca/
    ports:
      - 7154:7054

  peer0.db.org2.fabric.network:
    container_name: peer0.db.org2.fabric.network
    image: hyperledger/fabric-couchdb
    ports:
      - 5985:5984

  peer0.org2.fabric.network:
    container_name: peer0.org2.fabric.network
    image: hyperledger/fabric-peer
    tty: true
    environment:
        - CORE_PEER_ID=peer0.org2.fabric.network
        - CORE_PEER_ADDRESS=peer0.org2.fabric.network:7051
        - CORE_PEER_LOCALMSPID=Org2MSP
        - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/crypto-config/msp
        - CORE_PEER_TLS_ENABLED=true
        - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/crypto-config/tls/server.crt
        - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/crypto-config/tls/server.key
        - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/crypto-config/tls/ca.crt
        - CORE_PEER_ENDORSER_ENABLED=true
        - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.fabric.network:7051
        - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org2.fabric.network:7051
        - CORE_PEER_GOSSIP_USELEADERELECTION=true
        - CORE_PEER_GOSSIP_ORGLEADER=false
        # This disables mutual auth for gossip
        - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
        - CORE_PEER_PROFILE_ENABLED=true
        - CORE_LOGGING_LEVEL=debug
        - CORE_NEXT=true
        - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
        - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=twoorgs_default
        - GOPATH=/opt/gopath
        # World state
        - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
        - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=peer0.db.org2.fabric.network:5984
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
             /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ./assets/crypto-config/peerOrganizations/org2.fabric.network/peers/peer0.org2.fabric.network/:/etc/hyperledger/fabric/crypto-config/
    ports:
      - 7061:7051
      - 7063:7053
    depends_on: 
      - orderer.fabric.network
      - peer0.db.org2.fabric.network 

  cli.peer0.org2.fabric.network:
      container_name: cli.peer0.org2.fabric.network
      image: hyperledger/fabric-tools
      tty: true
      environment:
        - GOPATH=/opt/gopath
        - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
        - CORE_LOGGING_LEVEL=debug
        - CORE_PEER_ID=peer0.org2.fabric.network
        - CORE_PEER_ADDRESS=peer0.org2.fabric.network:7051
        - CORE_PEER_LOCALMSPID=Org2MSP
        - CORE_PEER_TLS_ENABLED=true
        - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/crypto-config/tls/server.crt
        - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/crypto-config/tls/server.key
        - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/crypto-config/tls/ca.crt
        - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/crypto-config/users/Admin@org2.fabric.network/msp
        - ORDERER_CA=/etc/hyperledger/fabric/crypto-config/orderer/msp/tlscacerts/tlsca.fabric.network-cert.pem
      working_dir: /opt/gopath/src/github.com/hyperledger/fabric
      command: /bin/bash
      volumes:
        - /var/run/:/host/var/run/
        - ./assets/crypto-config/peerOrganizations/org2.fabric.network/peers/peer0.org2.fabric.network/:/etc/hyperledger/fabric/crypto-config/
        - ./assets/crypto-config/peerOrganizations/org2.fabric.network/users/:/etc/hyperledger/fabric/crypto-config/users/
        - ./assets/crypto-config/ordererOrganizations/fabric.network/orderers/orderer.fabric.network/:/etc/hyperledger/fabric/crypto-config/orderer/
        - ./assets/channel-artefacts/:/opt/gopath/src/github.com/hyperledger/fabric/channel-artefacts/
        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/scripts
        - ../../chaincodes/:/opt/gopath/src/github.com/hyperledger/fabric/chaincodes/
      depends_on:
        - peer0.org2.fabric.network

# Asset Generator
  assets.generator.fabric.network:
    container_name: assets.generator.fabric.network
    image: hyperledger/fabric-tools
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - FABRIC_CFG_PATH=/opt/gopath/src/github.com/hyperledger/fabric
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    volumes:
      - .:/opt/gopath/src/github.com/hyperledger/fabric

# Restful API
# Org1
  api.org1.fabric.network:
    container_name: api.org1.fabric.network
    image: aladdinid/fabric-rest-api
    environment:
      - GOPATH=/opt
      - ORG=Org1
    working_dir: /opt
    volumes:
      - ./assets:/opt/orgs/assets
    ports:
      - 8081:8080

# Org2
  api.org2.fabric.network:
    container_name: api.org2.fabric.network
    image: aladdinid/fabric-rest-api
    environment:
      - GOPATH=/opt
      - ORG=Org2
    working_dir: /opt
    volumes:
      - ./assets:/opt/orgs/assets
    ports:
      - 8082:8080

#Postgress
  postgres.fabric.network:
    container_name: postgres.fabric.network
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
    volumes:
      - ./postgres/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
      - ./explorer/app/db/explorerpg.sql:/var/pg/explorerpg.sql
      - ./explorer/app/db/updatepg.sql:/var/pg/updatepg.sql
    ports:
      - 5432:5432

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

#Explorer
  explorer.fabric.network:
    container_name: explorer.fabric.network
    image: aladdinid/fabric-explorer
    environment:
      PUBLIC_URL: "http://explorer.fabric.network:8080"
    working_dir: /opt
    volumes:
      - ./assets:/opt/assets
    ports:
      - 9000:8080
